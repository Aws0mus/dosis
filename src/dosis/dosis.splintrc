+showscan
+showsummary
+stats
-usestderr

# we want posix checking, but not strict (see splint manual, strict
# gives spurious warnings when we ignore return values from fprintf etc.)
-posix-strict-lib
-retvalint

# read system header files even if we know what they contain this slows
# parsing, but otherwise we might get an error because splint is missing
# function prototypes (this happened in Debian with ftruncate, for example)
+gnuextensions
-skip-posix-headers

# splint doesn't understand u_intXX_t even though it's posix
-Du_int64_t=uint64_t
-Du_int32_t=uint32_t
-Du_int16_t=uint16_t
-Du_int8_t=uint8_t

# other type definitions
-D__signed__=signed

-systemdirs /usr/include:/usr/local/lib/:/usr/lib
-includenest 5

# splint has special support for boolean testing, but
# this does not exist in older C languages and we don't want it.
-boolops
-pred-bool-int
-pred-bool-others
-booltype bool_t

-uncheckedglobalias errno
