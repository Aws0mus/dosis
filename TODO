TODO LIST
=========

- implement main loop in another way:
    current situation:
      - two types of loops
          - send
          - receive
          - wtf is a listener?
      - send loops manage their own timer
      - receive loops depend on a flag mutex, so they are blocked indefinetely
        until a message arrives.
    desired situation:
      - easier to understand
      - only one type of thread? or three? four? five?
      - timer management easier for threads
      - thread config more homogeneus.
          - perhaps config hashtable?
- allow to choose seq generation algorithm for tcpraw thread.
- tcpopen:
    - integrste send function.
- tcpraw:
    - set window to 0, and persisting.
    - acknowledge before receive.
    - zero window after syn+ack (test demostrated more than 350sec FIN1_WAIT)
- make gram more restrictive
- stress tests
- implement include statement
- ack acked:
    1) syn + sack + ack
    2) send req
    3) ack first bytes (A)
    4) ack more bytes (B)
    5) ack again A bytes
- monkey in the middle
- slow loris
- make a free-list in snode (a list for freeing memory at program
  finalizatoin).
